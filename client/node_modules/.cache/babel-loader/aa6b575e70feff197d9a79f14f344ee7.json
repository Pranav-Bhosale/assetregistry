{"ast":null,"code":"var _jsxFileName = \"/home/pranav-bhosale/Desktop/assetregistry/client/src/components/LanRightFAculty.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"../firebaseconfig.js\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth, sendPasswordResetEmail, sendEmailVerification, signInWithEmailAndPassword, browserSessionPersistence, setPersistence } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nfunction LoginFormFaculty(props) {\n  _s();\n\n  const path = \"/infoall/\" + props.uid;\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [text, settext] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  function resetPass() {\n    if (email) {\n      sendPasswordResetEmail(auth, email).then(() => {\n        settext(\"Password reset link has been sent to above email\");\n      }).catch(error => {\n        const errorCode = error.code;\n        settext(\"Error!! \" + errorCode);\n      });\n    } else {\n      settext(\"Enter Email First! \");\n    }\n  }\n\n  function handleLogin(e) {\n    e.preventDefault(e);\n    setPersistence(auth, browserSessionPersistence).then(() => {\n      signInWithEmailAndPassword(auth, email, pass).then(userCredential => {\n        return onValue(ref(database, '/faculty/' + userCredential.user.uid), snapshot => {\n          if (snapshot.exists()) {\n            if (auth.currentUser.emailVerified) {\n              settext(\"Success!!\");\n              setRedirect(true);\n            } else {\n              sendEmailVerification(auth.currentUser).then(() => {\n                settext(\"Verify your Email to sign in..Email verfification link has been sent to reistered Email\");\n              });\n            }\n          } else {\n            return onValue(ref(database, '/admin/' + userCredential.user.uid), snapshot => {\n              if (snapshot.exists()) {\n                if (auth.currentUser.emailVerified) {\n                  settext(\"Success!!\");\n                  setRedirect(true);\n                } else {\n                  sendEmailVerification(auth.currentUser).then(() => {\n                    settext(\"Verify your Email to sign in..Email verification link has been sent to registered Email\");\n                  });\n                }\n              } else {}\n            }, {\n              onlyOnce: true\n            });\n          }\n        }, {\n          onlyOnce: true\n        });\n      }).catch(error => {\n        settext(\"Failed !! \\n\" + error.code);\n      });\n    }).catch(error => {\n      const errorCode = error.code;\n      settext(\"Session Error \" + errorCode);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lanright\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginText\",\n        children: \"Faculty Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        spellCheck: false,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        className: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPass(e.target.value),\n        className: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"lanButton\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lanButton\",\n        onClick: resetPass,\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginFormFaculty, \"Vq0RRJzryr5xYWgWow52DFCcw2g=\");\n\n_c = LoginFormFaculty;\nexport default LoginFormFaculty;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormFaculty\");","map":{"version":3,"sources":["/home/pranav-bhosale/Desktop/assetregistry/client/src/components/LanRightFAculty.jsx"],"names":["React","useState","Redirect","initializeApp","firebaseConfig","getDatabase","ref","onValue","getAuth","sendPasswordResetEmail","sendEmailVerification","signInWithEmailAndPassword","browserSessionPersistence","setPersistence","app","database","auth","LoginFormFaculty","props","path","uid","email","setEmail","pass","setPass","text","settext","redirect","setRedirect","resetPass","then","catch","error","errorCode","code","handleLogin","e","preventDefault","userCredential","user","snapshot","exists","currentUser","emailVerified","onlyOnce","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"../firebaseconfig.js\"\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth,sendPasswordResetEmail, sendEmailVerification,signInWithEmailAndPassword,browserSessionPersistence,setPersistence } from \"firebase/auth\";\nconst app = initializeApp(firebaseConfig);\n\nconst database = getDatabase(app);\nconst auth = getAuth();\n\n\nfunction LoginFormFaculty(props) {\n  const path=\"/infoall/\"+props.uid;\n\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [text, settext] = useState(\"\");\n  const [redirect,setRedirect]=useState(false);\n\n  if (redirect) {\n    return <Redirect to={path} />\n  }\n\n\n  function resetPass()\n  {\n    if(email)\n    {\n    sendPasswordResetEmail(auth, email)\n   .then(() => {\n    settext(\"Password reset link has been sent to above email\");\n   })\n  .catch((error) => {\n    const errorCode = error.code;\n    settext(\"Error!! \" +errorCode);\n  });\n  }\n  else{\n    settext(\"Enter Email First! \" );\n  }\n  }\n\n function handleLogin(e){\n  e.preventDefault(e);\n  setPersistence(auth, browserSessionPersistence)\n  .then(() => {\n    signInWithEmailAndPassword(auth, email, pass)\n  .then((userCredential) => {\n  \n      return onValue(ref(database, '/faculty/' + userCredential.user.uid), (snapshot) => {\n        if(snapshot.exists())\n        {\n          if(auth.currentUser.emailVerified)\n          {\n            settext(\"Success!!\");\n            setRedirect(true);\n          }\n          else{\n            sendEmailVerification(auth.currentUser)\n            .then(() => {\n              settext(\"Verify your Email to sign in..Email verfification link has been sent to reistered Email\");\n            });\n          }\n        }\n        else{\n          return onValue(ref(database, '/admin/' + userCredential.user.uid), (snapshot) => {\n            if(snapshot.exists())\n            {\n              if(auth.currentUser.emailVerified)\n              {\n                settext(\"Success!!\");\n                setRedirect(true);\n              }\n              else{\n                sendEmailVerification(auth.currentUser)\n                .then(() => {\n                  settext(\"Verify your Email to sign in..Email verification link has been sent to registered Email\");\n                });\n              }\n            }\n            else{\n              \n            }\n          \n          }, {\n            onlyOnce: true\n          });\n        }\n      \n      }, {\n        onlyOnce: true\n      });\n  })\n  .catch((error) => {\n    settext(\"Failed !! \\n\"+error.code);\n  });\n    \n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    settext(\"Session Error \"+errorCode);\n  }); \n }\n\n\n  return (\n    <div className=\"lanright\">\n     <form onSubmit={handleLogin}>\n    <h1 className=\"loginText\">Faculty Sign In</h1>\n    <input  spellCheck={false} onChange={(e) => setEmail(e.target.value)} type=\"email\" className=\"email\" placeholder=\"Email\" />\n    <br/>\n    <input type=\"password\" onChange={(e) => setPass(e.target.value)} className=\"password\" placeholder=\"Password\" />\n    <br />\n   <button type=\"submit\" className=\"lanButton\" >Sign In</button>\n   <button className=\"lanButton\" onClick={resetPass} >Forgot Password</button> \n    <br/>\n    <p>{text}</p>\n    </form>\n    </div>\n    \n    \n  );\n}\n\nexport default LoginFormFaculty;"]},"metadata":{},"sourceType":"module"}