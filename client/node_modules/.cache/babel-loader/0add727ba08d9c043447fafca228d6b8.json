{"ast":null,"code":"var _jsxFileName = \"/home/pranav-bhosale/Desktop/assetregistry/client/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"../firebaseconfig.js\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth, sendPasswordResetEmail, sendEmailVerification, signInWithEmailAndPassword, browserSessionPersistence, setPersistence } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nfunction LoginForm() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [text, settext] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/viewAsset1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  function resetPass() {\n    if (email) {\n      sendPasswordResetEmail(auth, email).then(() => {\n        settext(\"Password reset link has been sent to above email\");\n      }).catch(error => {\n        const errorCode = error.code;\n        settext(\"Error!! \" + errorCode);\n      });\n    } else {\n      settext(\"Enter Email First! \");\n    }\n  }\n\n  function handleLogin(e) {\n    e.preventDefault(e);\n    setPersistence(auth, browserSessionPersistence).then(() => {\n      signInWithEmailAndPassword(auth, email, pass).then(userCredential => {\n        return onValue(ref(database, '/admin/' + userCredential.user.uid), snapshot => {\n          if (snapshot.exists()) {\n            if (auth.currentUser.emailVerified) {\n              settext(\"Success!!\");\n              setRedirect(true);\n            } else {\n              sendEmailVerification(auth.currentUser).then(() => {\n                settext(\"Verify your Email to sign in..Email verification link has been sent to registered Email\");\n              });\n            }\n          } else {\n            settext(\"You are not a ADMIN!!\");\n          }\n        }, {\n          onlyOnce: true\n        });\n      }).catch(error => {\n        settext(\"Failed !! \\n\" + error.code);\n      });\n    }).catch(error => {\n      const errorCode = error.code;\n      settext(\"Session Error \" + errorCode);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginText\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        spellCheck: false,\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        className: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"password\",\n        onChange: e => setPass(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"lanButton\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetPass,\n        className: \"lanButton\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"Vq0RRJzryr5xYWgWow52DFCcw2g=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/pranav-bhosale/Desktop/assetregistry/client/src/components/LoginForm.jsx"],"names":["React","useState","Redirect","initializeApp","firebaseConfig","getDatabase","ref","onValue","getAuth","sendPasswordResetEmail","sendEmailVerification","signInWithEmailAndPassword","browserSessionPersistence","setPersistence","app","database","auth","LoginForm","email","setEmail","pass","setPass","text","settext","redirect","setRedirect","resetPass","then","catch","error","errorCode","code","handleLogin","e","preventDefault","userCredential","user","uid","snapshot","exists","currentUser","emailVerified","onlyOnce","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"../firebaseconfig.js\"\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { getAuth,sendPasswordResetEmail,sendEmailVerification, signInWithEmailAndPassword,browserSessionPersistence,setPersistence } from \"firebase/auth\";\nconst app = initializeApp(firebaseConfig);\n\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nfunction LoginForm() {\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [text, settext] = useState(\"\");\n  const [redirect,setRedirect]=useState(false);\n\n  if (redirect) {\n    return <Redirect to='/viewAsset1' />\n  }\n  function resetPass()\n  {\n    if(email)\n    {\n    sendPasswordResetEmail(auth, email)\n   .then(() => {\n    settext(\"Password reset link has been sent to above email\");\n   })\n  .catch((error) => {\n    const errorCode = error.code;\n    settext(\"Error!! \" +errorCode);\n  });\n  }\n  else{\n    settext(\"Enter Email First! \" );\n  }\n  }\n\n\n function handleLogin(e){\n  e.preventDefault(e);\n  setPersistence(auth, browserSessionPersistence)\n  .then(() => {\n    signInWithEmailAndPassword(auth, email, pass)\n  .then((userCredential) => {\n  \n      return onValue(ref(database, '/admin/' + userCredential.user.uid), (snapshot) => {\n        if(snapshot.exists())\n        {\n          \n          if(auth.currentUser.emailVerified)\n          {\n            settext(\"Success!!\");\n            setRedirect(true);\n          }\n          else{\n            sendEmailVerification(auth.currentUser)\n            .then(() => {\n              settext(\"Verify your Email to sign in..Email verification link has been sent to registered Email\");\n            });\n          }\n          \n          \n        }\n        else{\n          settext(\"You are not a ADMIN!!\");\n        }\n      \n      }, {\n        onlyOnce: true\n      });\n  })\n  .catch((error) => {\n    settext(\"Failed !! \\n\"+error.code);\n  });\n    \n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    settext(\"Session Error \"+errorCode);\n  }); \n }\n  return (\n    <div >\n  <form onSubmit={handleLogin}>\n    <h1 className=\"loginText\">Sign In</h1>\n    <input  spellCheck={false} type=\"email\" onChange={(e) => setEmail(e.target.value)} className=\"email\" placeholder=\"Email\" />\n    <br/>\n    <input type=\"password\" className=\"password\" onChange={(e) => setPass(e.target.value)} placeholder=\"Password\" />\n    <br />\n    <button type=\"submit\" className=\"lanButton\" >Sign In</button>\n    <button onClick={resetPass}  className=\"lanButton\">Forgot Password</button>\n    <br/>\n     <p>{text}</p> \n  </form>\n    </div>\n    \n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}